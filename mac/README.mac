$Id: README.mac,v 1.22 2003/01/28 11:56:32 ben Exp $

Information about PuTTY for the Mac OS
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

Compiling it:

 See ../README for generic information.

 To compile PuTTY for Mac OS you will need:

 MPW
  <ftp://ftp.apple.com/developer/Tool_Chest/Core_Mac_OS_Tools/MPW_etc./
   MPW-GM_Images/MPW-GM.img.bin>

 Universal Headers (optional)
  <ftp://ftp.apple.com/developer/Development_Kits/
   UniversalHeaders3.4.2.img.bin>

 Text Encoding Converter SDK
  <ftp://ftp.apple.com/developer/Development_Kits/TEC_1.5.sit.hqx>

 Install MPW, install the new Universal Headers (optional), then put
 the contents of the "68K Static Libraries" directory of the Text
 Encoding Converter SDK into "Interfaces&Libraries:Libraries:Libraries",
 and the contents of the "Stub Libraries" directory into
 "Interfaces&Libraries:Libraries:SharedLibraries".

 The "mkputty.mpw" script does all the work, and currently producess a
 Classic 68K build of PuTTY called "PuTTY.68k", a non-Carbon PowerPC
 build called "PuTTY.ppc", and similar builds of PuTTYtel called
 "PuTTYtel.68k" and "PuTTYtel.ppc".  The CFM-68K build is currently
 disabled because it overflows the global data space and I can't work
 out how to stop this happening.

Runtime requirements:

 The Classic 68K build of PuTTY should work on any Macintosh running
 System 7.0 or later.  It runs in the Classic environment in Mac OS X.

 The CFM-68K build of PuTTY should work on any Macintosh with a 68020,
 68030 or 68040 processor and with either the CFM-68K Runtime Enabler
 or Mac OS 7.6.1 or later installed.

 The PowerPC build of PuTTY should work on any Power Macintosh.  It
 runs in the Classic environment in Mac OS X.

Known bugs:
 * Display is far too slow.
 * Real bold doesn't compensate for changing character widths without Color
   QuickDraw. [MAYBE FIXED]
 * Compiling ssh.c using SC 8.8.4 with "-opt time" causes SSH1
   connections to fail with "Incorrect CRC received on packet".  Using
   "-opt none" works around this.
 * When the last terminal window closes, the Edit menu doesn't get disabled
   immediately, which it should.
 * When using the "VT100" font, text copied to the clipboard doesn't
   get newlines in it, because that font has a graphic character at
   position 0x0d.  Even if we did insert 0x0d manually, TextEdit
   insists on displaying the graphic version, so I think we need a
   font switch at this point.  This can be seen as a special case of
   the need to switch fonts to get odd characters.
 * Pasting large blocks of text doesn't work.

Unimplemented features (should be done before release):
 * TCP urgent data.
 * Listening sockets.
 * Clipping host resize requests to screen size.
 * Changing font size in reponse to resize requests.
 * Full screen mode.
 * Catching up with current keyboard mapping in other ports.
 * Session configuration.
 * Filename abstraction (we want to use alias records).
 * Host key database.
 * Entropy collection.
 * Private key files.
 * Pageant and PuTTYgen.
 * Do something with Open Application Apple Events.
 * Warn-on-close.
 * Close-on-exit.
 * Warn-on-quit.
 * Event log.
 * Flashing things.

Wishlist (after release):
 * SFTP client (GUI?)
 * Carbon compatibility (requires Open Transport and Navigation Services).
 * 'styl' paste, for script codes.
 * Handle 'gurl' Apple Events.

Local Variables:
mode: text
End:
