$Id: README.mac,v 1.8 2003/01/05 12:53:38 ben Exp $

Information about PuTTY for the Mac OS
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

Compiling it:

 See ../README for generic information.

 To compile PuTTY for Mac OS you will need:

 MPW
  <ftp://ftp.apple.com/developer/Tool_Chest/Core_Mac_OS_Tools/MPW_etc./
   MPW-GM_Images/MPW-GM.img.bin>

 Universal Headers (optional)
  <ftp://ftp.apple.com/developer/Development_Kits/
   UniversalHeaders3.4.2.img.bin>

 Text Encoding Converter SDK
  <ftp://ftp.apple.com/developer/Development_Kits/TEC_1.5.sit.hqx>

 Install MPW, install the new Universal Headers (optional), then put
 the contents of the "68K Static Libraries" directory of the Text
 Encoding Converter SDK into "Interfaces&Libraries:Libraries:Libraries",
 and the contents of the "Stub Libraries" directory into
 "Interfaces&Libraries:Libraries:SharedLibraries".

 The "mkputty.mpw" script does all the work, and currently producess a
 Classic 68K build of PuTTY called "PuTTY.68k", a CFM-68K build called
 "PuTTY.cfm68k", and a non-Carbon PowerPC build called "PuTTY.ppc".

Runtime requirements:

 The Classic 68K build of PuTTY should work on any Macintosh running
 System 7.0 or later.  It runs in the Classic environment in Mac OS X.

 The CFM-68K build of PuTTY should work on any Macintosh with a 68020,
 68030 or 68040 processor and with either the CFM-68K Runtime Enabler
 or Mac OS 7.6.1 or later installed.

 The PowerPC build of PuTTY should work on any Power Macintosh.  It
 runs in the Classic environment in Mac OS X.

Known bugs:

 * PowerPC and fat versions fail to start on systems without AppearanceLib (ie
   most System 7 ones).  The 68k version works fine. [MAYBE FIXED]
 * Display is far too slow.
 * Real bold doesn't compensate for changing character widths without Color
   QuickDraw. [MAYBE FIXED]
 * sshsha.c and sshmd5.c cause a stack overflow in Apple's PowerPC C compiler 
   unless optimisation is entirely disabled.

Features we need (and aren't entirely obvious):

 * TCP urgent data.
 * Scroll-conflation -- scroll_display should change the in-memory
   display and remember the scroll, then do_scroll should be called
   only when scroll_display gets called for a different rectangle or
   term_paint happens.

Local Variables:
mode: text
End:
